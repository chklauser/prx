//PRX

Name prx/1.0;

// The namespace is called "prx.v1" because we don't want to dump
// all of the old symbols into the `prx` namespace.
namespace prx.v1 {
    declare {
        command:
            print,println,
            meta,
            boxed,
            string_concat,
            concat,
            map,
            flat_map,
            select,
            foldl,
            foldr,
            dispose,
            call\perform,
            thunk,
            asthunk,
            force,
            toseq,
            call\member\perform,
            caller,
            pair,
            unbind,
            sort,
            orderby,
            LoadAssembly,
            debug,
            setcenter,
            setleft,
            setright,
            all,
            where,
            skip,
            limit,
            take,
            abs,
            ceiling,
            exp,
            floor,
            log,
            max,
            min,
            pi,
            round,
            sin,
            cos,
            sqrt,
            tan,
            char,
            count,
            distinct,
            union,
            unique,
            frequency,
            groupby,
            intersect,
            call\tail\perform,
            list,
            each,
            exists,
            forall,
            CompileToCil,
            takewhile,
            except,
            range,
            reverse,
            headtail,
            append,
            sum,
            contains,
            chan,
            call\async\perform,
            async_seq,
            call\sub\perform,
            pa\ind,
            pa\mem,
            pa\ctor,
            pa\check,
            pa\cast,
            pa\smem,
            pa\fun\call,
            pa\flip\call,
            pa\call\star,
            then,
            id,
            const,
            (+),
            (-),
            (*),
            (/),
            $mod,
            (^),
            (&),
            (|),
            $xor,
            (==),
            (!=),
            (>),
            (>=),
            (<),
            (<=),
            (-.),
            $complement,
            $not,
            create_enumerator,
            create_module_name,
            create_source_position,
            get_unscoped_ast_factory,
            seqconcat,
        macro command:
            call,
            call\member,
            call\tail,
            call\async,
            call\sub,
            call\sub\interpret,
            macro\pack,
            macro\unpack,
            macro\reference,
            call\star,
            call\macro,
            call\macro\impl,
            entityref_to,
            // constructor (new T)
            create_Bool,
            create_Char,
            create_Hash,
            create_Int,
            create_List,
            create_Null,
            create_Object,
            create_Real,
            create_String,
            create_Structure,
            // type check (is T)
            is_Bool,
            is_Char,
            is_Hash,
            is_Int,
            is_List,
            is_Null,
            is_Object,
            is_Real,
            is_String,
            is_Structure,
            // type cast (~T)
            to_Bool,
            to_Char,
            to_Hash,
            to_Int,
            to_List,
            to_Null,
            to_Object,
            to_Real,
            to_String,
            to_Structure,
            // static call (~T.method)
            static_call_Bool,
            static_call_Char,
            static_call_Hash,
            static_call_Int,
            static_call_List,
            static_call_Null,
            static_call_Object,
            static_call_Real,
            static_call_String,
            static_call_Structure
    };

}