name psr.test;
references {
    prx/1.0
};

namespace import sys.rt.builtin.create_Object;

namespace psr.test.v1 
    import prx.v1(*) 
{
    // NOTE: test is not split up into impl and dependencies because it must not
    // have any dependencies.
    build does add("../../test.pxs");
    test\version "2.0";
}

namespace psr.test {} export psr.test.v1(
    run_test,
    run_tests,
    list_tests,
    load_plugins,
    test\diagnostics => diagnostics
);


// Export the run_test function slot name so that it can easily be called from
// PrexoniteTest C# code.
build does asm(ldr.app).Meta["psr.test.run_test"] = 
    new Prexonite::MetaEntry(sys.ct.entityref_to(psr.test.run_test).Id);

namespace psr.test 
    import sys(*)
{
    function test_filters = psr.test.v1.test_filters >> seq.to_list;

    function run_tests_in_app(app) {
        var self_name = asm(ldr.app).Module.Name;
        var test_subsystem;
        if(not app.Compound.TryGetApplication(self_name, test_subsystem = ?)){
            throw "The $(app.Module.Name) application is not linked to the $self_name module. Cannot run tests.";
        }
        return test_subsystem.Functions[sys.ct.entityref_to(psr.test.run_tests).Id].();
    }
}

namespace psr.test.ui {} export psr.test.v1(
    test\basic_ui => basic
);

namespace psr.test.assertions {} export psr.test.v1(
    test\assert => assert, 
    test\assert_eq => assert_eq, 
    test\assert_neq => assert_neq
);
